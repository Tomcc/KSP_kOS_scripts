run once lib.

SET TARGET_APOAPSIS TO 70000.

FUNCTION THROTTLE_TO_TWR {
	DECLARE PARAMETER TARGET.
	SET THROTTLE_TARGET TO THROTTLE_MIN.
	UNTIL TWR() > TARGET {
		IF TICKED(1) {
			ADD_THROTTLE(0.05).
			WAIT TICK_DURATION_S * THROTTLE_LAG_TICKS. //wait enough for the engine to respond to the change
		}
	}
	PRINT "TWR reached: " + TWR() + ", " + TWR() / TARGET * 100 + "% of target".
}

LOCK STEERING TO HEADING(90, 90).

LIFTOFF().

GEAR OFF.

THROTTLE_TO_TWR(1.5).

WAIT UNTIL SHIP:AIRSPEED > 50. //wait to reach a decent speed

PRINT "Performing pitch-over".

UNLOCK STEERING.

SET SHIP:CONTROL:YAW TO 0.02.

WAIT UNTIL VDOT( SHIP:FACING:VECTOR, HEADING(90, 83):FOREVECTOR ) > 0.999.

SET SHIP:CONTROL:YAW TO -0.02.

UNTIL ABS(SHIP:ANGULARVEL:Y) < 0.0001 {
	SET SHIP:CONTROL:YAW TO SHIP:ANGULARVEL:Y.
	PRINT SHIP:ANGULARVEL:Y .
}
SET SHIP:CONTROL:YAW TO 0.

PRINT "Gravity turn started".

LOCK STEERING TO VELOCITY:SURFACE.

//enter throttleable regime
//until Apoapsis is reached
SET LAST_SPEED TO SHIP:VERTICALSPEED. 
SET LAST_ACCEL TO 0.
SET ANGULARVEL TO SHIP:ANGULARVEL:Y.
UNTIL ALT:RADAR > TARGET_APOAPSIS - 200 {
	IF TICKED(2) {

		SET ANGLEDIFF TO VELOCITY:SURFACE:DIRECTION:PITCH - SHIP:FACING:PITCH.
		IF ANGLEDIFF < -0.01 {
			//ADD_THROTTLE(0.02).
		}
		ELSE IF ANGLEDIFF > 0.01 {
			//ADD_THROTTLE_NO_TURNOFF(0.02).
		}
		PRINT ANGLEDIFF.

		SET ACCEL TO SHIP:VERTICALSPEED - LAST_SPEED.

		//PRINT "Vy: " + ROUND(SHIP:VERTICALSPEED ,2) + " ms, Ay: " + ROUND(ACCEL,2) + " ms2, dA: " + ROUND(ACCEL - LAST_ACCEL,2) + " ms3".
		//PRINT SHIP:ANGULARVEL:Y.
		SET ANGULARVEL TO SHIP:ANGULARVEL:Y.

		SET LAST_SPEED TO SHIP:VERTICALSPEED.
		SET LAST_ACCEL TO ACCEL.

		WAIT 0.5.
	}
}

