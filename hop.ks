
FUNCTION GET_THRUST {
	LOCAL TOTALTHRUST IS 0.
	LIST ENGINES in ALL_ENGINES.

	FOR e in ALL_ENGINES {
		SET TOTALTHRUST TO TOTALTHRUST + e:THRUST * 1000.
	}
	RETURN TOTALTHRUST.
}
LOCK THRUST TO GET_THRUST().

SET MIN_PHYSICS_TICK_SPEED TO 30.
SET _LAST_TIME TO TIME.
SET DELTA_T TO 0.
FUNCTION IS_TICK {
	IF TIME <> _LAST_TIME {
		SET DELTA_T TO MIN(1/MIN_PHYSICS_TICK_SPEED, TIME:SECONDS - _LAST_TIME:SECONDS).
		SET _LAST_TIME TO TIME.
		RETURN TRUE.
	}
	SET DELTA_T TO 0.
	RETURN FALSE.
}

SET THROTTLE_MIN TO 0.4.
FUNCTION FILTER_THROTTLE {
	IF T >= THROTTLE_MIN {
		RETURN T.
	}
	RETURN 0.
}

//-------------------------------------

DECLARE PARAMETER TARGET_APOAPSIS.

SET ROCKET_HEIGHT TO ALT:RADAR.

SET ORIG_LONG TO LONGITUDE.
SET ORIG_LAT TO LATITUDE.

//Next, we'll lock our throttle to 100%.
SET T TO 0.
LOCK THROTTLE TO FILTER_THROTTLE().   // 1.0 is the max, 0.0 is idle.
LOCK STEERING TO HEADING(90, 89.9). //head slightly east t balance the rotation of the planet
LOCK MASS_KG TO SHIP:MASS * 1000.

//This is our countdown loop, which cycles from 10 to 0
PRINT "Counting down:".
FROM {local countdown is 3.} UNTIL countdown = 0 STEP {SET countdown to countdown - 1.} DO {
    PRINT "..." + countdown.
    WAIT 1. // pauses the script here for 1 second.
}

PRINT "LIFTOFF!!!".

GEAR OFF.
SET T TO 1.0.
STAGE.

//enter throttleable regime
//until Apoapsis is reached
SET LAST_SPEED TO SHIP:VERTICALSPEED.
UNTIL ALT:RADAR > TARGET_APOAPSIS - 200 {
	IF IS_TICK() {
		SET ACCEL TO LAST_SPEED - SHIP:VERTICALSPEED.
		//PRINT ACCEL / DELTA_T.
		SET LAST_SPEED TO SHIP:VERTICALSPEED.
		
		IF SHIP:APOAPSIS > TARGET_APOAPSIS {
			SET T TO 0.
		}
		ELSE IF SHIP:DYNAMICPRESSURE > 0.26 {
			SET T TO THROTTLE_MIN.
		}
		ELSE IF SHIP:DYNAMICPRESSURE < 0.24 AND SHIP:APOAPSIS < TARGET_APOAPSIS - 50 {
			SET T TO MIN(1, T + 0.1 * DELTA_T).
		}
	}
}

SET T TO 0.
PRINT "Coasting to Apoapsis".

WAIT UNTIL SHIP:VERTICALSPEED < 0.

PRINT "Apoapsis reached at " + APOAPSIS.
PRINT "Deploying gear to dispel speed".
GEAR ON.

WAIT UNTIL SHIP:VERTICALSPEED < -5.
PRINT "Initiating reentry".

LOCK STEERING to -VELOCITY:SURFACE.

LOCK G TO SHIP:SENSORS:GRAV:MAG.

UNTIL SHIP:VERTICALSPEED > -5 {
	IF IS_TICK() {
		LOCAL CRITICAL_H IS ((SHIP:VERTICALSPEED * SHIP:VERTICALSPEED) / (2 * ((SHIP:AVAILABLETHRUST * 1000 / MASS_KG) - G))).

		IF ALT:RADAR - ROCKET_HEIGHT - 1 <= CRITICAL_H {
			SET T TO 1.0.
		}
		ELSE {
			SET T TO MAX(0, T - 0.15 * DELTA_T). //back off
		}
	}
}

LOCK STEERING TO UP.
SET T TO 0.

PRINT "Burn complete, releasing control.".

//ensure that the throttle remains 0
SET SHIP:CONTROL:PILOTMAINTHROTTLE TO 0.
