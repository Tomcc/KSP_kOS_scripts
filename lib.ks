
//initialize the rocket height as it's vital for landing. From file if possible.
RUN ONCE selfconfig.

GLOBAL DELTA_T IS 0.
GLOBAL THROTTLE_TARGET IS 0.
GLOBAL THROTTLE_MIN IS 0.4. 
GLOBAL TICK_DURATION_S IS 1/50.

FUNCTION THRUST {
	LOCAL TOTALTHRUST IS 0.
	LIST ENGINES in ALL_ENGINES.

	FOR e in ALL_ENGINES {
		SET TOTALTHRUST TO TOTALTHRUST + e:THRUST.
	}
	RETURN TOTALTHRUST * 1000.
}

FUNCTION AVAILABLE_THRUST {
	LOCAL TOTALTHRUST IS 0.
	LIST ENGINES in ALL_ENGINES.

	FOR e in ALL_ENGINES {
		SET TOTALTHRUST TO TOTALTHRUST + e:AVAILABLETHRUST.
	}
	RETURN TOTALTHRUST * 1000.
}

FUNCTION MASS_KG {
	RETURN SHIP:MASS * 1000.
}

FUNCTION WEIGHT {
	RETURN SHIP:SENSORS:GRAV:MAG * MASS_KG().
}

FUNCTION TWR {
	RETURN THRUST() / WEIGHT().
}

SET _LAST_TIME TO TIME:SECONDS.

FUNCTION UPDATE_DT {
	SET DELTA_T TO TIME:SECONDS - _LAST_TIME.
	SET _LAST_TIME TO TIME:SECONDS.
}

FUNCTION ADD_THROTTLE {
	DECLARE PARAMETER CHANGE.
	SET THROTTLE_TARGET TO MAX(0, MIN(1, THROTTLE_TARGET + CHANGE * DELTA_T)).
}

FUNCTION ADD_THROTTLE_NO_TURNOFF {
	DECLARE PARAMETER CHANGE.
	SET THROTTLE_TARGET TO MAX(THROTTLE_MIN, MIN(1, THROTTLE_TARGET + CHANGE * DELTA_T)).
}

FUNCTION THROTTLE_TO_MAX {
	SET THROTTLE_TARGET TO 1.
}

FUNCTION THROTTLE_TO_MIN {
	SET THROTTLE_TARGET TO THROTTLE_MIN.
}

FUNCTION FILTER_THROTTLE {
	IF THROTTLE_TARGET >= THROTTLE_MIN {
		RETURN THROTTLE_TARGET.
	}
	RETURN 0.
}

LOCK THROTTLE TO FILTER_THROTTLE().

FUNCTION LIFTOFF {
	//This is our countdown loop, which cycles from 10 to 0
	PRINT "Counting down:".
	FROM {local countdown is 3.} UNTIL countdown = 0 STEP {SET countdown to countdown - 1.} DO {
	    PRINT "..." + countdown.
	    WAIT 1. // pauses the script here for 1 second.
	}

	PRINT "LIFTOFF!!!".

	STAGE.
}

FUNCTION MAX_THRUST {
	RETURN SHIP:MAXTHRUST * 1000.
}

FUNCTION FUEL_FLOW {
	LOCAL TOTALFLOW IS 0.
	LIST ENGINES in ALL_ENGINES.

	FOR e in ALL_ENGINES {
		SET TOTALFLOW TO TOTALFLOW + e:FUELFLOW.
	}
	RETURN TOTALFLOW.
}

FUNCTION THROTTLE_TO_TWR_WITH_MAXTHRUST {
	DECLARE PARAMETER TARGET.
	DECLARE PARAMETER P_THRUST.
	SET THROTTLE_TARGET TO (TARGET * WEIGHT()) / P_THRUST.
}

FUNCTION THROTTLE_TO_TWR {
	DECLARE PARAMETER TARGET.
	THROTTLE_TO_TWR_WITH_MAXTHRUST(TARGET, AVAILABLE_THRUST()).
}

FUNCTION TANGENT_SPEED {
	RETURN SHIP:VELOCITY:SURFACE * SHIP:UP:TOPVECTOR * SHIP:UP:TOPVECTOR + SHIP:VELOCITY:SURFACE * SHIP:UP:STARVECTOR * SHIP:UP:STARVECTOR.
}

//ensure that the throttle remains 0
SET SHIP:CONTROL:PILOTMAINTHROTTLE TO 0.
